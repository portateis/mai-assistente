# mai_chatbot.py
import os
from datetime import datetime
from dotenv import load_dotenv
import openai
from filiais import encontrar_filial_mais_proxima, obter_dados_da_filial, filiais_massafort

load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")

conversation_history = [
    {
        "role": "system",
        "content": (
            "Voc√™ √© MAI, a assistente virtual da MASSA FORT CONCRETO. "
            "Seja gentil, acolhedora, emp√°tica e objetiva. Interprete mensagens livres do cliente com intelig√™ncia. "
            "Forne√ßa informa√ß√µes sobre or√ßamento, tipos de concreto, localiza√ß√£o de filiais e contatos de gerente."
        )
    }
]

brand_info = (
    "Massa Fort Concreto: Mais de 17 Anos de Excel√™ncia na Constru√ß√£o\n"
    "Construindo bases s√≥lidas para o futuro\n\n"
    "Somos refer√™ncia no setor com uma rede de 27 filiais, dedicados a fornecer concreto de alta qualidade, "
    "servi√ßos confi√°veis e solu√ß√µes sob medida para cada projeto."
)

def obter_saudacao():
    hora = datetime.now().hour
    if hora < 12:
        return "Bom dia"
    elif hora < 18:
        return "Boa tarde"
    return "Boa noite"

def mostrar_menu_inicial():
    saudacao = obter_saudacao()
    mensagem = (
        f"{saudacao}! üòä Eu sou a MAI, a assistente virtual da *Massa Fort Concreto*.\n"
        f"{brand_info}\n\n"
        "Como posso te ajudar hoje?\n\n"
        "1Ô∏è‚É£ Fazer or√ßamento\n"
        "2Ô∏è‚É£ Saber sobre tipos de concreto\n"
        "3Ô∏è‚É£ Localizar filial mais pr√≥xima\n"
        "4Ô∏è‚É£ Falar com um gerente\n\n"
        "‚ùå Digite 'sair' para encerrar."
    )
    print(mensagem)
    conversation_history.append({"role": "assistant", "content": mensagem})

def responder_mensagem(mensagem):
    global conversation_history
    user_input = mensagem.strip()
    lower_msg = user_input.lower()
    conversation_history.append({"role": "user", "content": user_input})

    # A√ß√µes diretas por palavras-chave
    if any(k in lower_msg for k in ["cobran√ßa", "diretoria", "reclama√ß√£o", "jur√≠dico", "juridico", "ti"]):
        resposta = (
            "Para assuntos como cobran√ßa, diretoria, jur√≠dico, TI ou reclama√ß√µes, por favor entre em contato com nossa Matriz:\n\n"
            "üìç Av. Maria Quit√©ria n.1445, Feira de Santana, BA\n"
            "üìß massafort@massafort.com\n"
            "üìû (75) 3024-1111\n"
            "üïí Atendimento: Seg-Sex, 7:30 √†s 18:00"
        )
        conversation_history.append({"role": "assistant", "content": resposta})
        return resposta

    if lower_msg in ["1", "or√ßamento"]:
        resposta = "Claro! Me informe a cidade onde ser√° feita a entrega do concreto. üòä"
    elif lower_msg in ["2", "tipos de concreto"]:
        resposta = "Temos concreto usinado, bombe√°vel, estrutural, entre outros. Quer ajuda para escolher o ideal? üí°"
    elif lower_msg in ["3", "filial"]:
        resposta = "Me diga o nome da sua cidade, e eu localizo a filial mais pr√≥xima pra voc√™. üó∫Ô∏è"
    elif lower_msg in ["4", "gerente"]:
        resposta = "Me informe a cidade para eu passar o contato do gerente respons√°vel. ü§ù"
    elif lower_msg in ["sair", "encerrar"]:
        resposta = "Foi um prazer falar com voc√™! Se precisar, estarei por aqui. üíô"
    elif "feira de santana" in lower_msg or "salvador" in lower_msg:
        cidade_alvo = "feira de santana" if "feira de santana" in lower_msg else "salvador"
        opcoes = [nome for nome in filiais_massafort.keys() if cidade_alvo in nome.lower()]
        resposta = "Encontrei mais de uma filial nessa cidade:\n\n"
        for filial in opcoes:
            dados = filiais_massafort[filial]
            resposta += f"üè¢ *{filial}*\nüë§ {dados['gerente']} - üìû https://wa.me/{dados['whatsapp_gerente']}\n\n"
    else:
        # Tenta identificar filial pela mensagem
        filial = encontrar_filial_mais_proxima(lower_msg)
        if filial:
            dados = obter_dados_da_filial(filial)
            if dados:
                resposta = (
                    f"A filial mais pr√≥xima √© *{filial}*.\n"
                    f"üë§ Gerente: {dados['gerente']}\nüìû WhatsApp: https://wa.me/{dados['whatsapp_gerente']}\n"
                    f"üìß E-mail: {dados['email_gerente']}\n"
                )
                conversation_history.append({"role": "assistant", "content": resposta})
                return resposta

        # Fallback: envia para OpenAI
        try:
            openai_response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=conversation_history
            )
            resposta = openai_response.choices[0].message.content.strip()
        except Exception:
            resposta = "Desculpe, n√£o consegui processar sua mensagem agora. Tente novamente mais tarde."

    conversation_history.append({"role": "assistant", "content": resposta})
    return resposta
